name: bench
'on':
  schedule:
    - cron: 0 0 * * *
  push:
    branches: master
jobs:
  deno_std:
    runs-on: ubuntu-latest
    outputs:
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Setup Deno
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install autocannon -g
      - name: Start Bench
        run: deno run -A bench.ts deno_std
      - name: End Bench
        run: |
          RESULT_PATH="results/deno_std.json"
          RESULT="$(cat results/deno_std.json)"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  nhttp:
    runs-on: ubuntu-latest
    outputs:
      result_path: '${{ steps.result.outputs.result_path }}'
      result: '${{ steps.result.outputs.result }}'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Setup Deno
        uses: denoland/setup-deno@main
      - name: Install Autocannon
        run: npm install autocannon -g
      - name: Start Bench
        run: deno run -A bench.ts nhttp
      - name: End Bench
        run: |
          RESULT_PATH="results/nhttp.json"
          RESULT="$(cat results/nhttp.json)"
          echo "::set-output name=result_path::$RESULT_PATH"
          echo "::set-output name=result::$RESULT"
  results:
    runs-on: ubuntu-latest
    needs:
      - deno_std
      - nhttp
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Result deno_std
        run: >-
          echo '${{needs.deno_std.outputs.result}}' | jq . | tee
          ${{needs.deno_std.outputs.result_path}}
      - name: Result nhttp
        run: >-
          echo '${{needs.nhttp.outputs.result}}' | jq . | tee
          ${{needs.nhttp.outputs.result_path}}
      - name: Setup deno
        uses: denoland/setup-deno@main
      - name: Setup readme
        run: deno run -A ./helpers/readme.ts
      - name: Commit and push
        uses: actions-js/push@master
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          coauthor_email: bot@example.com
          coauthor_name: bot_ci
          branch: master
